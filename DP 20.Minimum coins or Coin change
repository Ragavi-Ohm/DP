 int f(int i,vector<vector<int>>&dp,vector<int>&coins,int amount)
    {
    if(i==0)
    {
        if(amount%coins[0]==0) return amount/coins[0];
        else return INT_MAX-2;
    }
    if(dp[i][amount]!=-1)
    return dp[i][amount];
    
    int notpick=0+f(i-1,dp,coins,amount);
    int pick=INT_MAX-2;
    if(coins[i]<=amount)
    pick=1+f(i,dp,coins,amount-coins[i]);
    return dp[i][amount]=min(pick,notpick);

    }
    int coinChange(vector<int>& coins, int amount) {
        int n=coins.size();
        vector<vector<int>>dp(n,vector<int>(amount+1,-1));
         int ans=f(n-1,dp,coins,amount);
         if(ans<INT_MAX-2)
         return ans;
         else
         return -1;
        
    }
