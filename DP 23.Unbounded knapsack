int unboundedKnapsack(int n, int w, vector<int> &profit, vector<int> &weight)
{
    // Write Your Code Here.
    vector<vector<int>>dp(n,vector<int>(w+1,0));
    for(int i=weight[0];i<=w;i++)
    {
       
       dp[0][i]=profit[0]*(i/weight[0]);
       
    }
    for(int i=1;i<n;i++)
    {
        for(int j=0;j<=w;j++)
        {
            int notpick=dp[i-1][j]+0;
            int pick=INT_MIN;
            if(weight[i]<=j)
            pick=dp[i][j-weight[i]]+profit[i];
            dp[i][j]=max(pick,notpick);

        }
    }
    return dp[n-1][w];

}
